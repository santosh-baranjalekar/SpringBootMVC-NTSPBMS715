package com.nt.controller;

import java.time.LocalDateTime;
import java.util.HashMap;
import java.util.Map;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.ui.ModelMap;
import org.springframework.validation.support.BindingAwareModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

@Controller
public class DataRenderingController {

	/*@RequestMapping("/process")
	public String process(Map<String, Object> map) {
		System.out.println("SharedMemoryObjectClassName:: " + map.getClass());
		// add model attributes to shared memory
		map.put("Attribute1", "Value1");
		map.put("CurrentDate", LocalDateTime.now());
		// return LVN
		return "show_data";
	}*/
	
	/*@RequestMapping("/process")
	public String process(Model model) {
		System.out.println("SharedMemoryObjectClassName:: " + model.getClass());
		// add model attributes to shared memory
		model.addAttribute("Attribute1", "Value1");
		model.addAttribute("CurrentDate", LocalDateTime.now());
		// return LVN
		return "show_data";
	}*/
	
	/*@RequestMapping("/process")
	public String process(ModelMap map) {
		System.out.println("SharedMemoryObjectClassName:: " + map.getClass());
		// add model attributes to shared memory
		map.addAttribute("Attribute1", "Value1");
		map.addAttribute("CurrentDate", LocalDateTime.now());
		// return LVN
		return "show_data";
	}*/
	
	
    //Taking Handler Method return type as Model(I)
	/*@RequestMapping("/process") //Here the LVN is RequestPath(process)
	public Model process() {
		Model model=new BindingAwareModelMap(); //manually created shared memory
		model.addAttribute("Attribute1", "Value1");
		model.addAttribute("CurrentDate", LocalDateTime.now());
		// return LVN
		return model;
	}*/
	
	// Taking Handler Method return type as Map<String,Object>
	/*@RequestMapping("/process") // Here the LVN is RequestPath(process)
	public Map<String,Object> process() {
		//create shared memory
		Map<String,Object> map=new HashMap<String, Object>();
		map.put("Attribute1", "Value1");
		map.put("CurrentDate", LocalDateTime.now());
		// return LVN
		return map;
	}*/
	
	//Taking ModelAndView(legacy style)as the return type of handler method
	@RequestMapping("/process") // Here the LVN is RequestPath(process)
	public ModelAndView process() {
		//create shared memory
		ModelAndView modelview=new ModelAndView();
		modelview.addObject("Attribute1", "Value1");
		modelview.addObject("CurrentDate", LocalDateTime.now());
		modelview.setViewName("show_data");
		// return LVN
		return modelview;
	}

}